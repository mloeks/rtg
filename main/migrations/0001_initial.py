# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-11-06 19:34
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.storage
import main.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_bet', models.CharField(blank=True, max_length=50)),
                ('result_bet_type', models.CharField(blank=True, choices=[('Differenz', 'differenz'), ('Niete', 'niete'), ('Remis Tendenz', 'remis_tendenz'), ('Tendenz', 'tendenz'), ('Volltreffer', 'volltreffer')], max_length=50)),
                ('points', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bettable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deadline', models.DateTimeField()),
                ('name', models.CharField(max_length=50, unique=True)),
                ('result', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'ordering': ['deadline', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ExtraChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_index', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'ordering': ['sort_index', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('content', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('finished', models.BooleanField(default=True)),
                ('news_appear', models.BooleanField(default=True)),
                ('as_mail', models.BooleanField(default=False)),
                ('force_mail', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('email2', models.EmailField(blank=True, max_length=254)),
                ('avatar', models.ImageField(blank=True, null=True, storage=main.storage.OverwriteStorage(), upload_to=main.utils.get_avatar_path)),
                ('avatar_cropped', models.ImageField(blank=True, null=True, storage=main.storage.OverwriteStorage(), upload_to=main.utils.get_thumb_path)),
                ('about', models.CharField(blank=True, max_length=500, null=True)),
                ('location', models.CharField(blank=True, max_length=50)),
                ('has_paid', models.BooleanField(default=False)),
                ('reminder_emails', models.BooleanField(default=True)),
                ('daily_emails', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('no_bets', models.PositiveSmallIntegerField(default=0)),
                ('no_volltreffer', models.PositiveSmallIntegerField(default=0)),
                ('no_differenz', models.PositiveSmallIntegerField(default=0)),
                ('no_remis_tendenz', models.PositiveSmallIntegerField(default=0)),
                ('no_tendenz', models.PositiveSmallIntegerField(default=0)),
                ('no_niete', models.PositiveSmallIntegerField(default=0)),
                ('points', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('abbreviation', models.CharField(max_length=3, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TournamentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('abbreviation', models.CharField(max_length=3, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TournamentRound',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('is_knock_out', models.BooleanField(default=False)),
                ('display_order', models.PositiveSmallIntegerField()),
                ('abbreviation', models.CharField(blank=True, max_length=3)),
            ],
            options={
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('city', models.CharField(max_length=50)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Extra',
            fields=[
                ('bettable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Bettable')),
                ('points', models.SmallIntegerField(default=10)),
            ],
            bases=('main.bettable',),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('bettable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='main.Bettable')),
                ('kickoff', models.DateTimeField()),
                ('homegoals', models.SmallIntegerField(default=-1)),
                ('awaygoals', models.SmallIntegerField(default=-1)),
            ],
            options={
                'ordering': ['kickoff'],
            },
            bases=('main.bettable',),
        ),
        migrations.AddField(
            model_name='team',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.TournamentGroup'),
        ),
        migrations.AddField(
            model_name='post',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bet',
            name='bettable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Bettable'),
        ),
        migrations.AddField(
            model_name='bet',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='game',
            name='awayteam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_away', to='main.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='hometeam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_home', to='main.Team'),
        ),
        migrations.AddField(
            model_name='game',
            name='round',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.TournamentRound'),
        ),
        migrations.AddField(
            model_name='game',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Venue'),
        ),
        migrations.AddField(
            model_name='extrachoice',
            name='extra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='main.Extra'),
        ),
        migrations.AlterUniqueTogether(
            name='bet',
            unique_together=set([('bettable', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='extrachoice',
            unique_together=set([('name', 'extra')]),
        ),
    ]
